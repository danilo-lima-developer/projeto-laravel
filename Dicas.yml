Criando Projeto na versão 7: composer create-project --prefer-dist laravel/laravel:^7.0 projeto-laravel



Criando CONTROLLERS pelo terminal:

CRUD: php artisan make:controller Site/ContactController -r 
STATIC PAGE: php artisan make:controller Site/BlogController --invokable


Criando MIGRATIONS:

php artisan make:model Contact -f -m -s


OBS: Primeira Letra maiúscula e no singular
php artisan make:model --help

-f -> Factory -> database/factories
-m -> Model  -> database/migrations
-s -> seed -> database/seeds

Model é criado na pasta raiz app

Para rodar a migration -> php artisan migrate

arquivo .env para configurar banco de dados

php artisan migrate:fresh: Apaga todas tabelas e roda as migrations novamente

php artisan make:migration add_description_to_categories_table: sintaxe para adição de coluna em uma tabela


DICAS:

 php artisan config:cache: Para quando alterar o arquivo .env

 php artisan make:notification NewContact: Está relacionado ao envio de e-mail na pagina de contato  (Ler a documentação)

  php artisan queue:table: criar tabela para filas
  php artisan migrate: atualizar com novas alterações
php artisan queue:work --tries=3: rodar a fila para envio de e-mail com a tabela

  php artisan make:request ContactFormRequest: Utilizei para criar a classe de validação no ContactController.php

  composer require yoeunes/toastr: utilizado para mensagens de retorno erro
   php artisan vendor:publish: publicar os arquivos -> ESCOLHER A [9 ] Provider Yoeunes\Toastr\ToastrServiceProvider

   TESTE: 
    php artisan test: vai rodar os testes estruturados